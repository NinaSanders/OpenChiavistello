/*
  To upload through terminal you can use: curl -F "image=@firmware.bin" esp8266-webupdate.local/update


  Questo programma e' derivato da programmi presenti nella libreria MFRC522.
  Per maggiori dettagli sull'utilizzo della scheda RC522 fare riferimento
  alla suddetta libreria, reperibile in https://github.com/miguelbalboa/rfid

  Nota: La libreria utilizza in maniera predefinita alcune porte di Arduino
  per cui, per poter ripetere questo esercizio, e' necessario rispettare i
  seguenti collegamenti tra i pin della scheda RC522 e le porte di Arduino:
  -----------------------------------------------------------------------------------------
  ...........pin ......Arduino ......Arduino ...Arduino......Arduino........ Arduino
  Segnale....MFRC522 ... Uno ......... Mega .....Nano v3...Leonardo/Micro....ProMicro
  ----------------------------------------------------------------------------- -----------
  RST/Reset ...RST ..... 9 ........... 5 ......... D9 ......RESET/ICSP-5 ..... RST
  SPI SS .....SDA(SS)... 10 .......... 53 ........ D10 ........ 10 ........... 10
  SPI MOSI ....MOSI .... 11 .......... 51 ........ D11 .......ICSP-4 ......... 16
  SPI MISO ....MISO .... 12 .......... 50 ........ D12 .......ICSP-1 ......... 14
  SPI SCK .....SCK ..... 13 .......... 52 ........ D13 .......ICSP-3 ......... 15
  --------------------------------------------------------------------------------------
*/

#include <SPI.h> // richiama la libreria di gestione del bus SPI
#include <Servo.h>
#include <MFRC522.h> // richiama la libreria di gestione del lettore rc522
#define SS_PIN D8
#define RST_PIN D0
#define servo D4
#define red D2
#define blue D3
#define green D1

Servo serv ;
MFRC522 mfrc522(SS_PIN, RST_PIN);

int deg = 0;


void setup () {
  Serial.begin(9600);
  SPI.begin();
  serv.attach(servo);
  serv.write(deg);
  mfrc522.PCD_Init();
  delay(1000);
  mfrc522.PCD_DumpVersionToSerial();
  Serial.println("Avvicinare una scheda");
  
  pinMode(red, LOW);
  pinMode(blue, LOW);
  pinMode(green, LOW);

  analogWrite(red, 0);
  analogWrite(blue, 255);
  analogWrite(green, 0);
   
}
void loop () {
 
 if(! mfrc522.PICC_IsNewCardPresent() ){ 
    return;
 }
 if ( ! mfrc522.PICC_ReadCardSerial()) 
  {
    return;
  }
  //Show UID on serial monitor
  Serial.print("UID tag :");
  String content= "";
  //byte letter;
  for (byte i = 0; i < mfrc522.uid.size; i++) 
  {
     Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
     Serial.print(mfrc522.uid.uidByte[i], HEX);
     content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
     content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
  Serial.println();
  Serial.print("Message : ");
  content.toUpperCase();
  if (content.substring(1) == "D3 6F 4C 24") //change here the UID of the card/cards that you want to give access
  {
    Serial.println("Authorized access");
    Serial.println();
    //delay(2000);
    
    if(deg == 0){
      deg = 180;
      serv.write(deg);
      analogWrite(red, 0);
      analogWrite(blue, 0);
      analogWrite(green, 255);
      delay(1000);
    }else{
      deg = 0;
      serv.write(deg);
      analogWrite(red, 0);
      analogWrite(blue, 255);
      analogWrite(green, 0);
      delay(1000);
    }
    
  }
 
 else   {
    Serial.println(" Access denied");
    delay(3000);
    analogWrite(red, 255);
    analogWrite(blue, 0);
    analogWrite(green, 0);
  }
}
